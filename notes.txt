App router: nextJs uses the file system as the router. Every file inside the pages directory becomes a route.

For example:
- page.tsx returns a function that returns a JSX element. It is very similar to
HTML but with the power of JavaScript.
- layout.tsx is kind of a Wrapper around the page.tsx (Technically a child)

#Components used:
- NextUI: A React component library that provides a set of components that are ready to use.
    (npm install @nextui-org/react framer-motion)
        "./node_modules/@nextui-org/theme/dist/**/*.{js,ts,jsx,tsx}", -> in tailwind.config.js -> in content
        Also add the plugin for nextUi ->  plugins: [
                                             nextui(),
                                            ],
- React hook form: A library that helps to create forms in React. (npm install react-hook-form) -> Also validation with zod (npm install zod)
- NextAuth v5: A library that helps to create authentication in NextJs. (npm install next-auth)
- Prisma ORM: A library that helps to interact with the database. (npm install @prisma/client)
- NextJs Middleware: A library that helps to create middleware in NextJs. (npm install next-connect)


It is essential to add the NextUIProvider at the root of your application (Check components folder, Providers.txs and then layout.tsx)

- React icons: A set of icons that can be used in the application. (npm install react-icons)

-page.tsx and layout.tsx functionalities work together to create a page. The layout.tsx is a wrapper around the page.tsx.

